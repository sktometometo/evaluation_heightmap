<?xml version="1.0" encoding="utf-8"?>

<launch>
  <!-- Start position of waffle robot in scene. -->
  <arg name="x_pos" default="-3.0"/>
  <arg name="y_pos" default="1.0"/>
  <arg name="z_pos" default="0.0"/>

  <!-- Start gazebo server with turtlebot3_house scene. -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Load robot_description param for tf, rviz and gazebo spawn. -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_waffle.urdf.xacro" />

  <!-- Spawn turtlebot into gazebo based on robot_description. -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3 -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- Publish turtlebot3 tf's. -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="waffle_state_publisher" />

  <!-- Publish tf 'base_footprint' as pose.-->
  <node pkg="elevation_mapping_demos" type="tf_to_pose_publisher.py" name="waffle_pose_publisher">
    <param name="from_frame" type="string" value="odom" />
    <param name="to_frame"   type="string" value="base_footprint" />
  </node>

  <node pkg="jsk_pcl_ros" type="heightmap_converter" name="heightmap_converter">
    <!-- Subscribing Topics -->
      <remap from="~input" to="/camera/depth/points" />

    <!-- Dynamic Parameters -->
    <!--
        x 方向の点は, ( max_x - min_x ) / resolution_x = 0.01 [m] おきに分布
        y 方向の点は, ( max_y - min_y ) / resolution_y = 0.01 [m] おきに分布
    -->
    <rosparam>
        min_x: -1.0
        max_x: 5.0
        min_y: -5.0
        max_y: 5.0
        resolution_x: 1000
        resolution_y: 600
        initial_probability: 1.0
    </rosparam>

    <!-- Static Parameters -->
    <rosparam subst_value="true">
        use_projected_center: true
        fixed_frame_id: "odom"
        center_frame_id: "base_footprint"
        projected_center_frame_id: "heightmap_base"
    </rosparam>
  </node>


  <node pkg="jsk_pcl_ros" type="heightmap_morphological_filtering" name="heightmap_morphological_filtering">
    <!-- Subscribing Topics -->
    <remap from="~input" to="heightmap_converter/output" />

    <!-- Dynamic Parameters -->
    <rosparam subst_value="true">
        mask_size: 5
        mask_variance: 0.1
        smooth_method: "average_variance"
        use_bilateral: true
        bilateral_filter_size: 5
        bilateral_sigma_color: 0.04
        bilateral_sigma_space: 5
    </rosparam>

    <!-- Static Parameters -->
    <rosparam subst_value="true">
        max_queue_size: 10
    </rosparam>
  </node>


  <node pkg="jsk_pcl_ros" type="heightmap_time_accumulation" name="heightmap_time_accumulation">
    <!-- Subscribing Topics -->
    <remap from="~input" to="heightmap_morphological_filtering/output" />
    <remap from="~input/prev_pointcloud" to="/heightmap_cloud" />

    <!-- Publishing Topics -->
    <remap from="~output" to="/heightmap_image" />
    <remap from="~output/config" to="/heightmap_image/config" />

    <!-- Dynamic Parameters -->
    <rosparam>
        use_offset: false
        use_bilateral: false
        bilateral_filter_size: 5
        bilateral_sigma_color: 0.04
        bilateral_sigma_space: 5
    </rosparam>

    <!-- Static Parameters -->
    <rosparam subst_value="true">
        fixed_frame_id: "odom"
        center_frame_id: "heightmap_base"
        tf_queue_size: 10
    </rosparam>
  </node>


  <node pkg="jsk_pcl_ros" type="heightmap_to_pointcloud" name="heightmap_cloud_accumulated">
    <remap from="~input" to="/heightmap_image" />
    <remap from="~output" to="/heightmap_cloud" />
  </node>


  <!-- Launch RViz with the demo configuration. -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find evaluation_heightmap)/rviz/jsk_perception.rviz" />

</launch>
